<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<insert id="add" parameterType="java.util.HashMap">
		insert into member(id,pass,email) values(#{id},#{pass},#{email})
	</insert>
	<insert id="addDetail">
		insert into detail(id) values(#{id})
	</insert>
	
	<select id="readOne" parameterType="java.lang.String" resultType="java.util.HashMap">
		select * from member where id=#{id}
	</select>
	
	<select id="existCheck" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		select count(*) from member where (id=#{idmail} or email=#{idmail}) and pass=#{pass}
	</select>
	
	<select id="readByGender" resultType="java.util.HashMap">
		select * from detail where gender=#{gender}
	</select>
	
	<insert id="join">
		insert into member(id,pass,email) values(#{id},#{pass},#{email})
	</insert>
		
	<select id="getDetail" resultType="java.util.HashMap">
		select * from (select dd.*, p.uri, p.regdate from (select d.*, m.pass, m.email from detail d join member m on d.id=m.id) dd left join PROFILE p on dd.id=p.id where dd.id=#{ID,jdbcType=VARCHAR} order by regdate desc) where rownum=1
	</select>
	
	<select id="idcheck" resultType="java.util.HashMap">
		select * from member where id=#{id, jdbcType=VARCHAR}
	</select>
	
	<select id="emailcheck" resultType="java.util.HashMap">
		select * from member where email=#{email, jdbcType=VARCHAR}
	</select>
	
	<select id="login" resultType="java.util.HashMap">
		select * from member where (id=#{ids,jdbcType=VARCHAR} or email=#{ids,jdbcType=VARCHAR}) and pass=#{pass,jdbcType=VARCHAR}
	</select>	
	
	<select id="readAll" parameterType="java.lang.String" resultType="java.util.HashMap">
		select m.*, p.uri from member m left join (select id, max(uri) as uri from profile group by id) p on m.id =p.id
	</select>
	
	<select id="readMlist" resultType="java.util.HashMap">
		<![CDATA[select * from (select ROWNUM as r, t.* from(select * from (select m.*, p.uri from member m left join (select id, max(uri) as uri from profile group by id) p on m.id =p.id) order by id asc) t )where r>= #{START} and r<=#{END}]]>
	</select>
	
	<select id="friendlist" resultType="java.util.HashMap">
		select * from member where id like #{id}
	</select>
	
</mapper>